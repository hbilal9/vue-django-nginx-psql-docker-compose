services:
  traefic:
    image: traefik:v3.3
    container_name: traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      # Automatically redirect HTTP to HTTPS
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.web.http.redirections.entryPoint.permanent=true"
      # ACME (Let's Encrypt) configuration:
      - "--certificatesresolvers.myresolver.acme.email=support@tab2fix.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
    ports:
      - "443:443"
      - "80:80"
      - "8080:8080"
    networks:
      - tapiem
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - "./letsencrypt:/letsencrypt"  # Persist certificates

  db:
    image: postgres:16.0-alpine
    container_name: db_container
    environment:
      - POSTGRES_USER=db_user
      - POSTGRES_PASSWORD=db_password
      - POSTGRES_DB=db_name
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - tapiem
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  django:
    image: ghcr.io/your-github-username/your-project-repo:latest
    container_name: django_container
    ports:
      - "8000:8000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.django.rule=Host(`api.domain.co`)"
      - "traefik.http.routers.django.entrypoints=websecure"
      - "traefik.http.routers.django.tls=true"
      - "traefik.http.routers.django.tls.certresolver=myresolver"
      - "traefik.http.services.django.loadbalancer.server.port=8000"
    environment:
      - DJANGO_SETTINGS_MODULE=core.settings
      - DATABASE_USER=db_user
      - DATABASE_PASSWORD=db_password
      - DATABASE_PORT=5432
      - DATABASE_NAME=db_name
      - DATABASE_HOST=db
    command: >
      sh -c "sleep 10 && python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python manage.py create_superuser &&
             uvicorn core.asgi:application --host 0.0.0.0 --port 8000"
    networks:
      - tapiem
    depends_on:
      db:
        condition: service_healthy
      traefic:
        condition: service_started

  dashboard:
    image: ghcr.io/your-github-username/your-project-repo:latest
    container_name: dashboard_container
    stdin_open: true
    ports:
      - "3000:3000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`dashboard.domain.com`)"
      - "traefik.http.routers.dashboard.entrypoints=websecure"
      - "traefik.http.routers.dashboard.tls=true"
      - "traefik.http.routers.dashboard.tls.certresolver=myresolver"
      - "traefik.http.services.dashboard.loadbalancer.server.port=3000"
    networks:
      - tapiem
    depends_on:
      - traefic
      - django

networks:
  tapiem:
    driver: bridge

volumes:
  postgres-data:
  dashboard-dist:
